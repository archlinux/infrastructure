- name: Install archivetools and rsync
  pacman: name=archivetools,rsync state=present

- name: Make archive dir
  file:
    path: "{{ archive_dir }}"
    state: directory
    owner: archive
    group: archive
    mode: '0755'

- name: Setup archive configuration
  template:
    src: archive.conf.j2
    dest: /etc/archive.conf
    owner: root
    group: root
    mode: '0644'

- name: Setup archive timer
  systemd_service: name=archive.timer enabled=yes state=started

- name: Setup archive-hardlink timer
  systemd_service: name=archive-hardlink.timer enabled=yes state=started
- name: Install internet archive packages
  pacman: name=python-internetarchive,python-libarchive-c state=present

- name: Create archive user
  user: name={{ archive_user_name }} shell=/bin/false home="{{ archive_user_home }}" createhome=yes

- name: Configure archive.org client
  command: ia configure --username={{ vault_archive_username }} --password={{ vault_archive_password }} creates={{ archive_user_home }}/.ia
  become: true
  become_user: "{{ archive_user_name }}"

- name: Clone archive uploader code
  git: repo=https://gitlab.archlinux.org/archlinux/arch-historical-archive.git dest="{{ archive_repo }}" version="{{ archive_uploader_version }}"
  become: true
  become_user: "{{ archive_user_name }}"

- name: Install rsyncd config
  template: src=rsyncd.conf.j2 dest=/etc/rsyncd.conf owner=root group=root mode=0644

- name: Start and enable rsyncd.socket
  service: name=rsyncd.socket enabled=yes state=started

- name: Open rsyncd ipv4 port for the archive mirrors
  ansible.posix.firewalld: zone=wireguard state=enabled permanent=true immediate=yes
    rich_rule="rule family=ipv4 source address={{ hostvars[item]['wireguard_address'] }} port protocol=tcp port=873 accept"
  loop: "{{ groups['archive_mirrors'] }}"
  tags:
    - firewall

- name: Install system service
  template: src={{ item }} dest=/etc/systemd/system/{{ item }} owner=root group=root mode=0644
  loop:
    - archive-uploader.service
    - archive-uploader.timer
    - repos-archive-puller.service
    - repos-archive-puller.timer

- name: Start archive-uploader and repos-archive-puller timer
  systemd_service: name={{ item }} enabled=yes state=started daemon_reload=yes
  loop:
    - archive-uploader.timer
    - repos-archive-puller.timer
