- name: Install mailman3 and related packages
  pacman: name=mailman3,mailman3-hyperkitty,python-psycopg2,mailman-web,python-xapian-haystack,uwsgi-plugin-python state=present
  register: install

- name: Install {mailman,mailman-web} configuration
  template: src={{ item.src }} dest={{ item.dest }} owner=root group={{ item.group }} mode=0640
  loop:
    - {src: mailman.cfg.j2, dest: /etc/mailman.cfg, group: mailman}
    - {src: mailman-hyperkitty.cfg.j2, dest: /etc/mailman-hyperkitty.cfg, group: mailman}
    - {src: settings.py.j2, dest: /etc/webapps/mailman-web/settings.py, group: mailman-web}
    - {src: urls.py.j2, dest: /etc/webapps/mailman-web/urls.py, group: mailman-web}
  notify:
    - Reload mailman
    - Restart mailman-web

- name: Install mailman postfix.cfg configuration
  copy: src=postfix.cfg dest=/etc/postfix.cfg owner=root group=root mode=0644
  notify: Reload mailman

- name: Make nginx log dir
  file: path=/var/log/nginx/{{ lists_domain }} state=directory owner=root group=root mode=0755

- name: Set up nginx
  template: src=nginx.d.conf.j2 dest="/etc/nginx/nginx.d/mailman.conf" owner=root group=root mode=644
  notify: Reload nginx
  tags: ['nginx']

- name: Create postgres {mailman,mailman-web} user
  postgresql_user: name={{ item.username }} password={{ item.password }}
  loop:
    - {username: "{{ vault_mailman_db_user }}", password: "{{ vault_mailman_db_password }}"}
    - {username: "{{ vault_mailman_web_db_user }}", password: "{{ vault_mailman_web_db_password }}"}
  become: true
  become_user: postgres
  become_method: su
  no_log: true

- name: Create {mailman,mailman-web} db
  postgresql_db: name={{ item.db }} owner={{ item.owner }}
  loop:
    - {db: mailman, owner: "{{ vault_mailman_db_user }}"}
    - {db: mailman-web, owner: "{{ vault_mailman_web_db_user }}"}
  become: true
  become_user: postgres
  become_method: su

- name: Run Django management tasks
  command: django-admin {{ item }} --pythonpath /etc/webapps/mailman-web --settings settings
  loop:
    - migrate
    - loaddata
    - collectstatic
    - compress
  become: true
  become_user: mailman-web
  when: install.changed

- name: Open LMTP ipv4 port for lists.archlinux.org
  ansible.posix.firewalld: zone=wireguard state=enabled permanent=true immediate=yes
    rich_rule="rule family=ipv4 source address={{ hostvars['lists.archlinux.org']['wireguard_address'] }} port protocol=tcp port=8024 accept"
  tags:
    - firewall

- name: Start and enable mailman{.service,-*.timer}
  systemd: name={{ item }} enabled=yes daemon_reload=yes state=started
  loop:
    - mailman3.service
    - mailman3-digests.timer
    - mailman3-notify.timer
    - uwsgi@mailman\x2dweb.service

- name: update list configurations
  uri:
    url: http://localhost:8001/3.1/lists/{{ item }}.lists.archlinux.org/config
    user: "{{ vault_mailman_admin_user }}"
    password: "{{ vault_mailman_admin_pass }}"
    method: PUT
    body_format: json
    status_code: 204
    body: "{{ lookup('file', 'list_base_configuration.json') | from_json | combine(lists[item]) | to_json }}"
  loop: "{{ lists.keys() }}"
