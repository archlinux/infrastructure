apiVersion: 1

datasources:
{% if grafana_anonymous_access %}
- name: Prometheus
  type: prometheus
  access: proxy
  basicAuth: true
  basicAuthUser: {{ vault_prometheus_user }}
  jsonData:
    timeInterval: 1m
  secureJsonData:
    basicAuthPassword: {{ vault_prometheus_passwd }}
  url: http://{{ prometheus_domain }}:9090
{% else %}
- name: Prometheus
  type: prometheus
  access: proxy
  url: http://localhost:9090
  jsonData:
    timeInterval: 1m
- name: Loki
  type: loki
  access: proxy
  url: http://localhost:3100
  jsonData:
    manageAlerts: false
- name: Alertmanager
  type: alertmanager
  access: proxy
  url: http://localhost:9093
  jsonData:
    implementation: prometheus
- name: Tempo
  type: tempo
  access: proxy
  url: http://localhost:3200
  jsonData:
    tracesToLogsV2:
      # Field with an internal link pointing to a logs data source in Grafana.
      # datasourceUid value must match the uid value of the logs data source.
      datasourceUid: 'P8E80F9AEF21F6940'
      spanStartTimeShift: '-1h'
      spanEndTimeShift: '1h'
      #tags: ['job', 'instance', 'pod', 'namespace']
      filterByTraceID: false
      filterBySpanID: false
      customQuery: false
    tracesToMetrics:
      datasourceUid: 'PBFA97CFB590B2093'
      spanStartTimeShift: '1h'
      spanEndTimeShift: '-1h'
      #tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
      #queries:
      #  - name: 'Sample query'
      #    query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
    serviceMap:
      datasourceUid: 'PBFA97CFB590B2093'
    nodeGraph:
      enabled: true
    search:
      hide: false
    traceQuery:
      timeShiftEnabled: true
      spanStartTimeShift: '1h'
      spanEndTimeShift: '-1h'
    spanBar:
      type: 'Tag'
      tag: 'http.path'
{% endif %}
